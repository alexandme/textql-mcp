# GraphQL Schema for Wikidata Graph Database in Spanner
# This schema aligns with the Spanner entities and edges tables
# to enable natural language to GraphQL querying via TextQL MCP

scalar JSON

type Query {
    # Retrieve a single entity by its vertex ID
    entity(vid: ID!): Entity
    
    # Get all entities of a specific type
    entitiesByType(entity_type: String!): [Entity]
    
    # Search entities by label or description
    search(term: String!): [Entity]
}

type Entity {
    # Vertex ID (e.g., 'Q123456' for Wikidata entities)
    vid: ID!
    
    # Type of entity (e.g., 'Company', 'Person', 'Location')
    entity_type: String!
    
    # Human-readable label
    label: String
    
    # Entity description
    description: String
    
    # Data quality score (0.0-1.0)
    confidence_score: Float
    
    # Flexible storage for entity-specific data
    type_specific_attributes: JSON
    
    # Original Wikidata claims
    raw_claims: JSON
    
    # Timestamp when the entity was created
    created_at: String
    
    # Outgoing relationships from this entity
    relationships: [Relationship]
}

type Relationship {
    # Type of relationship (e.g., 'EMPLOYED_BY', 'FOUNDER_OF', 'SUBSIDIARY_OF')
    edge_type: String!
    
    # Target entity of the relationship
    target: Entity
    
    # Optional: When relationship started
    start_date: String
    
    # Optional: When relationship ended
    end_date: String
    
    # Optional: Role in the relationship
    role: String
    
    # Optional: Rank/priority of the relationship
    rank: String
    
    # Flexible storage for edge-specific data
    properties: JSON
    
    # Timestamp when the relationship was created
    created_at: String
}
